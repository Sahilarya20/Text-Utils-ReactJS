{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","placeholder","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAl","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","word","str","charAt","slice","capitalize","msg","prototypes","PropTypes","string","isRequired","App","setMode","setAlert","showAlert","message","setTimeout","body","ReactDOM","render","StrictMode"],"mappings":"kLAKe,SAASA,EAAOC,GAC3B,OACI,mCACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACI,sBAAKD,UAAU,kBAAf,UACI,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAE5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACI,sBAAMJ,UAAU,0BAEpB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACI,oBAAIL,UAAU,kCAAd,SACI,oBAAIA,UAAU,WAAd,SACI,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBAMR,uBAAMF,UAAU,SAAhB,UACI,uBAAOA,UAAU,oBAAoBI,KAAK,SAASE,YAAY,SAAS,aAAW,WACnF,wBAAQN,UAAU,kBAAkBI,KAAK,SAAzC,uBAEJ,sBAAKJ,UAAS,sCAA+C,UAAdD,EAAME,KAAgB,OAAO,SAA5E,UACA,uBAAOD,UAAU,mBAAmBO,QAASR,EAAMS,WAAYJ,KAAK,WAAWK,KAAK,SAASJ,GAAG,2BAChG,uBAAOL,UAAU,mBAAmBU,QAAQ,yBAA5C,oCC3BT,SAASC,EAASZ,GAC7B,IA6BA,EAAwBa,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACI,qCACI,sBAAKd,UAAU,YAAYe,MAAO,CAACC,MAAoB,SAAdjB,EAAME,KAAe,QAAQ,SAAtE,UACA,6BAAMF,EAAMkB,UACZ,qBAAKjB,UAAU,OAAf,SACI,0BAAUA,UAAU,eAAekB,MAAOL,EAAMM,SAZrC,SAACC,GAEpBN,EAAQM,EAAMC,OAAOH,QAU6DH,MAAO,CAACO,gBAA8B,SAAdvB,EAAME,KAAe,OAAO,QAAQe,MAAoB,SAAdjB,EAAME,KAAe,QAAQ,SAAUI,GAAG,QAAQkB,KAAK,QAEnM,wBAAQvB,UAAU,mBAAmBO,QAtC3B,WAElB,IAAIiB,EAAUX,EAAKY,cACnBX,EAAQU,GACRzB,EAAM2B,OAAO,wBAAwB,YAkC7B,iCACA,wBAAQ1B,UAAU,wBAAwBO,QAjC/B,WAEnB,IAAIiB,EAAUX,EAAKc,cACnBb,EAAQU,GACRzB,EAAM2B,OAAO,wBAAwB,YA6B7B,iCACA,wBAAQ1B,UAAU,wBAAwBO,QA5B7B,WAGrBO,EADc,IAEdf,EAAM2B,OAAO,eAAe,YAwBpB,wBACA,wBAAQ1B,UAAU,wBAAwBO,QAvBpC,WACd,IAAIM,EAAKe,SAASC,eAAe,SACjChB,EAAKiB,SACLC,UAAUC,UAAUC,UAAUpB,EAAKK,OACnCnB,EAAM2B,OAAO,eAAe,YAmBpB,0BAEJ,sBAAK1B,UAAU,iBAAiBe,MAAO,CAACC,MAAoB,SAAdjB,EAAME,KAAe,QAAQ,SAA3E,UACI,oDACA,8BAAIY,EAAKqB,MAAM,KAAKC,OAAO,EAA3B,cAAyCtB,EAAKsB,OAA9C,iBACA,8BAAI,KAAMtB,EAAKqB,MAAM,KAAKC,OAA1B,sBACA,yCACA,4BAAItB,EAAKsB,OAAO,EAAEtB,EAAK,qCClDxB,SAASuB,EAAMrC,GAO1B,OAEIA,EAAMsC,OAAS,sBAAKrC,UAAS,sBAAiBD,EAAMsC,MAAMjC,KAA7B,gCAAiEK,KAAK,QAApF,UAEZ,iCATc,SAAC6B,GACd,IAAMC,EAAID,EAAKX,cACf,OAAOY,EAAIC,OAAO,GAAGf,cAAcc,EAAIE,MAAM,GAOrCC,CAAW3C,EAAMsC,MAAMjC,QAFpB,KAEsCL,EAAMsC,MAAMM,OF0BzE7C,EAAO8C,WAAa,CAChBzC,MAAO0C,IAAUC,OAAOC,YGtB5B,IAiDeC,EAjDH,WACV,MAAwBpC,mBAAS,SAAjC,mBAAOX,EAAP,KAAagD,EAAb,KACA,EAA0BrC,mBAAS,MAAnC,mBAAOyB,EAAP,KAAca,EAAd,KAKMC,EAAU,SAACC,EAAShD,GACxB8C,EAAS,CACPP,IAAIS,EACJhD,KAAKA,IAEPiD,YAAW,WACTH,EAAS,QACR,MAeL,OAAQ,qCAEF,cAACpD,EAAD,CAAQK,MAAM,aAAaF,KAAMA,EAAMO,WAd5B,WACL,UAAPP,GAAgBgD,EAAQ,QAC7BrB,SAAS0B,KAAKvC,MAAMO,gBAAgB,UACpC6B,EAAU,6BAA6B,aAGnCF,EAAQ,SACRrB,SAAS0B,KAAKvC,MAAMO,gBAAgB,QACpC6B,EAAU,8BAA8B,eAOtC,cAACf,EAAD,CAAOC,MAAOA,IACd,qBAAKrC,UAAU,iBAAf,SAOE,cAACW,EAAD,CAAUe,OAASyB,EAAWlC,QAAQ,8BAA8BhB,KAAMA,UCpDpFsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAASC,eAAe,W","file":"static/js/main.e7ccb4d3.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                    {/* <Link className=\"navbar-brand\" to=\"#\">{props.title}</Link> */}\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                            </li> */}\r\n                        </ul>\r\n                        <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-success\" type=\"submit\">Search</button>\r\n                        </form>\r\n                        <div className={`form-check form-switch text-${props.mode ==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.prototypes = {\r\n    title: PropTypes.string.isRequired\r\n}","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked\"+text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAl(\"Changed to Upper Case\",\"success\");\r\n    }\r\n    const handlelowClick = () => {\r\n        // console.log(\"Uppercase was clicked\"+text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAl(\"Changed to lower Case\",\"success\");\r\n    }\r\n    const handleClearClick = () => {\r\n        // console.log(\"Uppercase was clicked\"+text);\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAl(\"Text Cleared\",\"success\");\r\n    }\r\n    const handleCopy =()=>{\r\n        let text=document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAl(\"Text Cleared\",\"success\");\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On change \");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n \r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color:props.mode ==='dark'?'white':'black'}}>\r\n            <h1 >{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode ==='dark'?'grey':'white',color:props.mode ==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n                <button className=\"btn btn-primary \" onClick={handleUpClick}>Conver to uppercase</button>\r\n                <button className=\"btn btn-primary mx-2 \" onClick={handlelowClick}>Conver to lowercase</button>\r\n                <button className=\"btn btn-primary mx-2 \" onClick={handleClearClick}>Clear text</button>\r\n                <button className=\"btn btn-primary mx-2 \" onClick={handleCopy}>Copy Text</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color:props.mode ==='dark'?'white':'black'}}>\r\n                <h2> Your text summary</h2>\r\n                <p>{text.split(\" \").length-1} words and {text.length} characters</p>\r\n                <p>{0.008*text.split(\" \").length} minutes to read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Enter yout text to Preview\"}</p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\n// import PropTypes from 'prop-types'\r\nexport default function Alert(props) {\r\n\r\n        const capitalize=(word)=>{\r\n            const str=word.toLowerCase();\r\n            return str.charAt(0).toUpperCase()+str.slice(1);\r\n        }\r\n\r\n    return (\r\n        \r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\" >\r\n            \r\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        \r\n        </div>\r\n        \r\n    )\r\n}\r\n","// import React from 'react'\n\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react';\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n  \n// } from \"react-router-dom\";\n\n\n\n// let name=\"Aryaa\";\n\nconst App = () => {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  \n\n  \n  \n  const showAlert=(message, type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const toggleMode=()=>{\n    if(mode==='light'){setMode('dark');\n  document.body.style.backgroundColor='#1b0a2f';\n  showAlert(\"Dark Mode has been Enabled\",\"success\");\n}\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode has been Enabled\",\"success\");\n    }\n\n  }\n  return  <>\n        {/* <Router> */}\n        <Navbar title=\"TextUtilss\" mode={mode} toggleMode={toggleMode}  />\n        <Alert alert={alert}/>\n        <div className=\"container my-3\">\n          \n        {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n            </Route> */}\n          {/* <Route exact path=\"/\"> */}\n          <TextForm showAl={ showAlert} heading=\" Enter the text to analyze \" mode={mode} />\n          {/* </Route> */}\n        {/* </Switch> */}\n        </div>\n\n        {/* </Router> */}\n  </>\n  \n};\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}