{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","placeholder","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAl","toLowerCase","navigator","clipboard","writeText","split","filter","element","Alert","height","alert","word","str","charAt","slice","capitalize","msg","About","myStyle","prototypes","PropTypes","string","isRequired","App","setMode","setAlert","showAlert","message","setTimeout","document","body","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7fc2e132.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    {/* <a className=\"navbar-brand\" href=\"#\">{props.title}</a> */}\r\n                    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-success\" type=\"submit\">Search</button>\r\n                        </form>\r\n                        <div className={`form-check form-switch text-${props.mode ==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.prototypes = {\r\n    title: PropTypes.string.isRequired\r\n}","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked\"+text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAl(\"Changed to Upper Case\",\"success\");\r\n    }\r\n    const handlelowClick = () => {\r\n        // console.log(\"Uppercase was clicked\"+text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAl(\"Changed to lower Case\",\"success\");\r\n    }\r\n    const handleClearClick = () => {\r\n        // console.log(\"Uppercase was clicked\"+text);\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAl(\"Text Cleared\",\"success\");\r\n    }\r\n    const handleCopy =()=>{\r\n       \r\n        navigator.clipboard.writeText(text);\r\n        \r\n        props.showAl(\"Text Copied\",\"success\");\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On change \");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n \r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color:props.mode ==='dark'?'white':'black'}}>\r\n            <h1 >{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode ==='dark'?'#13466e':'white',color:props.mode ==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n                <button disabled={text.length===0} className=\"btn btn-primary \" onClick={handleUpClick}>Conver to uppercase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1 \" onClick={handlelowClick}>Conver to lowercase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear text</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color:props.mode ==='dark'?'white':'black'}}>\r\n                <h2> Your text summary</h2>\r\n                <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n                <p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length} minutes to read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Nothing to preview\"}</p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\n// import PropTypes from 'prop-types'\r\nexport default function Alert(props) {\r\n\r\n        const capitalize=(word)=>{\r\n            const str=word.toLowerCase();\r\n            return str.charAt(0).toUpperCase()+str.slice(1);\r\n        }\r\n\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n       { props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\" >\r\n            \r\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        \r\n        </div>}\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    \r\n    let myStyle={\r\n        color:props.mode==='dark'?'white':'#042743',\r\n        backgroundColor:props.mode==='dark'?'rgb(36 74 104)':'white'\r\n       \r\n\r\n    }\r\n    // const [myStyle, setMyStyle] = useState({\r\n    //     color:'black',\r\n    //     backgroundColor:\"white\"\r\n       \r\n    // });\r\n\r\n    // const [buttonText, setButtonText] = useState(\"Enable dark mode\")\r\n\r\n    // const toggleStyle=()=> {\r\n    //     if(myStyle.color ==='black'){\r\n    //         setMyStyle({\r\n    //             color:'white',\r\n    //             backgroundColor:\"black\",\r\n    //             border:'1px solid white'\r\n\r\n    //         })\r\n    //         setButtonText(\"Enable light mode\");\r\n    //     }\r\n    //     else{\r\n    //         setMyStyle({\r\n    //             color:'black',\r\n    //             backgroundColor:\"white\"\r\n\r\n    //         })\r\n    //         setButtonText(\"Enable dark mode\");\r\n\r\n    //     }\r\n    // }\r\n    \r\n\r\n    return (\r\n        <div className=\"container\" >\r\n            <h1 className=\"my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>About Us</h1>\r\n                    <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n            <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                <strong>Analyze your text</strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button collapsed\"  style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n               <strong> Free to Use</strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                <strong> Browser Compatible</strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"container my-3\">\r\n            {/* <button type=\"button\" className=\"btn btn-primary m-4\" onClick={toggleStyle}>{buttonText}</button> */}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","// import React from 'react'\n\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react';\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n  \n} from \"react-router-dom\";\n\n\n\n// let name=\"Aryaa\";\n\nconst App = () => {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  \n\n  \n  \n  const showAlert=(message, type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const toggleMode=()=>{\n    if(mode==='light'){setMode('dark');\n  document.body.style.backgroundColor='#1b0a2f';\n  showAlert(\"Dark Mode has been Enabled\",\"success\");\n}\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode has been Enabled\",\"success\");\n    }\n\n  }\n  return  <>\n        <Router>\n        <Navbar title=\"TextUtilss\" mode={mode} toggleMode={toggleMode}  />\n        <Alert alert={alert}/>\n        <div className=\"container my-3\">\n          \n        <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode}/>\n            </Route>\n          <Route exact path=\"/\">\n          <TextForm showAl={ showAlert} heading=\" TextUtils-Text Manipulator \" mode={mode} />\n          </Route>\n        </Switch>\n        </div>\n\n        </Router>\n  </>\n  \n};\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}